
package restog6.Vistas;

import data.MesaData;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import modelos.Mesa;

/**
 * @author Grupo 6
 * Fernandez Valentina
 * Romero Jorge
 * Manuel Gutierrez
 */
public class MesaView_HabilitacionesMesa extends javax.swing.JInternalFrame {
    private MesaData mesaData;
    
    private Mesa mesaSeleccionada;
    
    /**
     * Creates new form MesaView_HabilitacionesMesa
     */
    public MesaView_HabilitacionesMesa(MesaData mesaData) {
        initComponents();
        this.mesaData = mesaData;
        this.setTitle("Habilitar / Deshabilitar una Mesa");
        llenarComboBoxMesas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        grupoEstado = new javax.swing.ButtonGroup();
        jlHabDeshabMesa = new javax.swing.JLabel();
        jlMesas = new javax.swing.JLabel();
        jcbMesas = new javax.swing.JComboBox<>();
        jlEstadoActual = new javax.swing.JLabel();
        jrbHabilitada = new javax.swing.JRadioButton();
        jrbDeshabilitada = new javax.swing.JRadioButton();
        jbConfirmar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setClosable(true);

        jlHabDeshabMesa.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jlHabDeshabMesa.setText("Habilitar/Deshabilitar Mesa");

        jlMesas.setText("Mesas");

        jcbMesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMesasActionPerformed(evt);
            }
        });

        jlEstadoActual.setText("Estado Actual");

        grupoEstado.add(jrbHabilitada);
        jrbHabilitada.setText("Habilitada");

        grupoEstado.add(jrbDeshabilitada);
        jrbDeshabilitada.setText("Deshabilitada");

        jbConfirmar.setText("Confirmar");
        jbConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConfirmarActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlHabDeshabMesa)
                .addGap(74, 74, 74))
            .addGroup(layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlMesas)
                        .addGap(18, 18, 18)
                        .addComponent(jcbMesas, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(47, 47, 47)
                            .addComponent(jbConfirmar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jbCancelar))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jlEstadoActual)
                            .addGap(18, 18, 18)
                            .addComponent(jrbHabilitada)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jrbDeshabilitada))))
                .addContainerGap(96, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlHabDeshabMesa)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlMesas)
                    .addComponent(jcbMesas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlEstadoActual)
                    .addComponent(jrbHabilitada)
                    .addComponent(jrbDeshabilitada))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbConfirmar)
                    .addComponent(jbCancelar))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jcbMesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMesasActionPerformed
        mesaSeleccionada = (Mesa)jcbMesas.getSelectedItem();
        if(mesaSeleccionada.isActivo()){
            jrbHabilitada.setSelected(true);
        }else{
            jrbDeshabilitada.setSelected(true);
        }
    }//GEN-LAST:event_jcbMesasActionPerformed

    private void jbConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConfirmarActionPerformed
        if(mesaSeleccionada.getEstado() == 'L'){
            if(mesaSeleccionada.isActivo() && jrbDeshabilitada.isSelected()){
                //mesaSeleccionada.setActivo(false);
                if(mesaData.deshabilitarMesa(mesaSeleccionada.getIdMesa())){
                    JOptionPane.showMessageDialog(this, "Mesa Deshabilitada!");
                }
            }else{
                if(!mesaSeleccionada.isActivo() && jrbHabilitada.isSelected()){
                    //mesaSeleccionada.setActivo(true);
                    if(mesaData.habilitarMesa(mesaSeleccionada.getIdMesa())){
                        JOptionPane.showMessageDialog(this, "Mesa Habilitada!");
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Sin Cambios en la Mesa!");
                }
            }
            
            this.dispose();
            
//            if(mesaData.modificarMesa(mesaSeleccionada)){
//                JOptionPane.showMessageDialog(this, mesaSeleccionada.isActivo() ? "Mesa Habilitada!" : "Mesa Deshabilitada!");
//                this.dispose();
//            }
        }else{
            JOptionPane.showMessageDialog(this, "Solo Puede Cambiarle el Estado a las Mesas Libres");
        }
        
        
    }//GEN-LAST:event_jbConfirmarActionPerformed

    private void llenarComboBoxMesas(){
        ArrayList<Mesa> mesas = mesaData.getMesasActivas();
        mesas.addAll(mesaData.getMesasInactivas());
        
        Collections.sort(mesas, new Comparator<Mesa>(){
            @Override
            public int compare(Mesa m1, Mesa m2){
                if(m1.getIdMesa() < m2.getIdMesa()){
                    return -1;
                }else{
                    if(m1.getIdMesa() > m2.getIdMesa()){
                        return 1;
                    }else{
                        return 0;
                    }
                }
            }
        });
        
        for(Mesa m : mesas){
            jcbMesas.addItem(m);
        }
        
        mesaSeleccionada = (Mesa)jcbMesas.getSelectedItem();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoEstado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbConfirmar;
    private javax.swing.JComboBox<Mesa> jcbMesas;
    private javax.swing.JLabel jlEstadoActual;
    private javax.swing.JLabel jlHabDeshabMesa;
    private javax.swing.JLabel jlMesas;
    private javax.swing.JRadioButton jrbDeshabilitada;
    private javax.swing.JRadioButton jrbHabilitada;
    // End of variables declaration//GEN-END:variables
}
